<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:Paway.WPF">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/Paway.WPF;component\Resources\Default.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <Style TargetType="{x:Type local:CheckBoxEXT}">
        <Setter Property="FontSize" Value="{Binding Path=(local:ThemeEXT.FontSize).Value, RelativeSource={RelativeSource Self}}"/>
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Padding" Value="0,0,3,0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="local:CheckBoxEXT">
                    <Grid Background="#00FFFFFF" Name="templateRoot" SnapsToDevicePixels="True" Focusable="True">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Border
                            BorderThickness="{TemplateBinding Border.BorderThickness}"
                            BorderBrush="{Binding Path=ItemBrush.Normal, RelativeSource={RelativeSource TemplatedParent}}"
                            Background="{TemplateBinding Panel.Background}"
                            CornerRadius="{TemplateBinding Radius}"
                            Name="checkBoxBorder"
                            Margin="7,6"
                            HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}">
                            <Grid Name="markGrid" >
                                <Path Style="{StaticResource PathRight}" Name="optionMark"
                                      Fill="{Binding Path=ItemBrush.Pressed, RelativeSource={RelativeSource TemplatedParent}}"
                                      Width="12" Height="11"
                                      Opacity="0" />
                                <Rectangle Fill="{Binding Path=ItemBrush.Mouse, RelativeSource={RelativeSource TemplatedParent}}"
                                           Margin="3" Width="8" Height="8"
                                           Name="indeterminateMark"
                                           Opacity="0" />
                            </Grid>
                        </Border>
                        <ContentPresenter
                            RecognizesAccessKey="True"
                            Content="{TemplateBinding ContentControl.Content}"
                            ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}"
                            ContentStringFormat="{TemplateBinding ContentControl.ContentStringFormat}"
                            Name="contentPresenter"
                            Margin="{TemplateBinding Control.Padding}"
                            HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"
                            SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"
                            Focusable="False"
                            Grid.Column="1" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="UIElement.IsMouseOver" Value="True">
                            <Setter Property="Panel.Background" TargetName="checkBoxBorder" Value="#FFF3F9FF"/>
                            <Setter Property="Border.BorderBrush" TargetName="checkBoxBorder" 
                                    Value="{Binding Path=ItemBrush.Mouse, RelativeSource={RelativeSource TemplatedParent}}"/>
                        </Trigger>
                        <Trigger Property="UIElement.IsEnabled" Value="False">
                            <Setter Property="Panel.Background" TargetName="checkBoxBorder" Value="#FFE6E6E6"/>
                            <Setter Property="Border.BorderBrush" TargetName="checkBoxBorder" Value="#FFBCBCBC"/>
                            <Setter Property="Shape.Fill" TargetName="optionMark" Value="#FF707070"/>
                        </Trigger>
                        <Trigger Property="ButtonBase.IsPressed" Value="True">
                            <Setter Property="Panel.Background" TargetName="checkBoxBorder" Value="#FFD9ECFF"/>
                            <Setter Property="Border.BorderBrush" TargetName="checkBoxBorder" 
                                    Value="{Binding Path=ItemBrush.Pressed, RelativeSource={RelativeSource TemplatedParent}}"/>
                        </Trigger>
                        <Trigger Property="ToggleButton.IsChecked" Value="True">
                            <Setter Property="UIElement.Opacity" TargetName="optionMark" Value="1"/>
                            <Setter Property="UIElement.Opacity" TargetName="indeterminateMark" Value="0"/>
                        </Trigger>
                        <Trigger Property="ToggleButton.IsChecked" Value="{x:Null}">
                            <Setter Property="UIElement.Opacity" TargetName="optionMark" Value="0"/>
                            <Setter Property="UIElement.Opacity" TargetName="indeterminateMark" Value="1"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>