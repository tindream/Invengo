<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:Paway.WPF">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/Paway.WPF;component\Resources\Default.xaml" />
        <ResourceDictionary Source="/Paway.WPF;component\Resources\ScrollBar.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <Style x:Key="CellStyle" TargetType="{x:Type DataGridCell}">
        <!--<Setter Property="Background" Value="White" />-->
        <Setter Property="BorderThickness" Value="3,6" />
        <!--<Setter Property="Opacity" Value="1" />-->
        <Style.Triggers >
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Background" Value="{Binding ItemBrush.Pressed, RelativeSource={RelativeSource AncestorType={x:Type local:DataGridEXT}}}" />
                <Setter Property="BorderBrush" Value="{Binding ItemBrush.Pressed, RelativeSource={RelativeSource AncestorType={x:Type local:DataGridEXT}}}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="RowStyle" TargetType="{x:Type DataGridRow}">
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{Binding ItemBrush.Normal, RelativeSource={RelativeSource AncestorType={x:Type local:DataGridEXT}}}"/>
            </Trigger>
            <!--<Trigger Property="IsSelected" Value="True">
                <Setter Property="Background" Value="{Binding ItemBrush.Pressed, RelativeSource={RelativeSource AncestorType={x:Type local:DataGridEXT}}}"/>
            </Trigger>-->
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsSelected" Value="True"/>
                    <Condition Property="IsMouseOver" Value="True"/>
                </MultiTrigger.Conditions>
                <Setter Property="Background" Value="{Binding ItemBrush.Mouse, RelativeSource={RelativeSource AncestorType={x:Type local:DataGridEXT}}}" />
                <Setter Property="BorderBrush" Value="{Binding ItemBrush.Mouse, RelativeSource={RelativeSource AncestorType={x:Type local:DataGridEXT}}}" />
            </MultiTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="ColumnHeaderStyle" TargetType="{x:Type DataGridColumnHeader}">
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="BorderThickness" Value="0,0,0,1"/>
        <Setter Property="BorderBrush" Value="LightGray"/>
        <Setter Property="Padding" Value="5,10"/>
        <Setter Property="Background">
            <Setter.Value>
                <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                    <GradientStop Offset="0" Color="{Binding Path=HeaderStart.Normal, RelativeSource={RelativeSource AncestorType={x:Type local:DataGridEXT}}}" />
                    <GradientStop Offset="1" Color="{Binding Path=HeaderEnd.Normal, RelativeSource={RelativeSource AncestorType={x:Type local:DataGridEXT}}}" />
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="Foreground" Value="{StaticResource Text}" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="White"/>
                <Setter Property="Background">
                    <Setter.Value>
                        <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                            <GradientStop Offset="0" Color="{Binding Path=HeaderStart.Mouse, RelativeSource={RelativeSource AncestorType={x:Type local:DataGridEXT}}}" />
                            <GradientStop Offset="1" Color="{Binding Path=HeaderEnd.Mouse, RelativeSource={RelativeSource AncestorType={x:Type local:DataGridEXT}}}" />
                        </LinearGradientBrush>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Foreground" Value="White"/>
                <Setter Property="Background">
                    <Setter.Value>
                        <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                            <GradientStop Offset="0" Color="{Binding Path=HeaderStart.Pressed, RelativeSource={RelativeSource AncestorType={x:Type local:DataGridEXT}}}" />
                            <GradientStop Offset="1" Color="{Binding Path=HeaderEnd.Pressed, RelativeSource={RelativeSource AncestorType={x:Type local:DataGridEXT}}}" />
                        </LinearGradientBrush>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="LastColumnHeaderStyle" TargetType="{x:Type DataGridColumnHeader}" BasedOn="{StaticResource ColumnHeaderStyle}">
        <Setter Property="BorderThickness" Value="0,0,0,1"/>
        <Setter Property="Margin" Value="0,0,-1,0"/>
    </Style>
    <Style x:Key="NormalColumnHeaderStyle" TargetType="{x:Type DataGridColumnHeader}" BasedOn="{StaticResource ColumnHeaderStyle}">
        <Setter Property="BorderThickness" Value="0,0,1,1"/>
    </Style>

    <Style TargetType="{x:Type local:DataGridEXT}" BasedOn="{StaticResource Config}">
        <Setter Property="ICustomColumnHeader" Value="True"/>
        <!--样式-->
        <Setter Property="ColumnHeaderStyle" Value="{StaticResource ColumnHeaderStyle}"/>
        <Setter Property="RowStyle" Value="{StaticResource RowStyle}"/>
        <Setter Property="CellStyle" Value="{StaticResource CellStyle}"/>
        <!--其它-->
        <Setter Property="IsReadOnly" Value="True"/>
        <Setter Property="BorderBrush" Value="LightGray"/>
        <!--标题-->
        <Setter Property="RowHeaderWidth" Value="0"/>
        <!--外观-->
        <Setter Property="Background" Value="#FAFAFA"/>
        <!--由ElementStyle样式转换-->
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <!--网格线-->
        <Setter Property="GridLinesVisibility" Value="Horizontal"/>
        <Setter Property="HorizontalGridLinesBrush">
            <Setter.Value>
                <SolidColorBrush Color="#E3E3E3"/>
            </Setter.Value>
        </Setter>
        <Setter Property="VerticalGridLinesBrush">
            <Setter.Value>
                <SolidColorBrush Color="#E3E3E3"/>
            </Setter.Value>
        </Setter>
        <!--列-->
        <Setter Property="AutoGenerateColumns" Value="False"/>
        <Setter Property="CanUserReorderColumns" Value="False"/>
        <Setter Property="CanUserResizeColumns" Value="True"/>
        <Setter Property="CanUserSortColumns" Value="True"/>
        <!--自动列宽-->
        <!--<Setter Property="ColumnWidth" Value="*"/>-->
        <!--行-->
        <!--隔行换色-->
        <!--<Setter Property="RowBackground" Value="Red"/>-->
        <Setter Property="AlternatingRowBackground" Value="#F3F3F3"/>
        <Setter Property="AlternationCount" Value="2"/>
        <!--单行选择-->
        <Setter Property="SelectionMode" Value="Single"/>
        <Setter Property="CanUserAddRows" Value="False"/>
        <Setter Property="CanUserResizeRows" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="DataGrid">
                    <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="True">
                        <ScrollViewer x:Name="DG_ScrollViewer" Focusable="false">
                            <ScrollViewer.Template>
                                <ControlTemplate TargetType="ScrollViewer">
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition Width="*"/>
                                            <ColumnDefinition Width="Auto"/>
                                        </Grid.ColumnDefinitions>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto"/>
                                            <RowDefinition Height="*"/>
                                        </Grid.RowDefinitions>
                                        <DataGridColumnHeadersPresenter x:Name="PART_ColumnHeadersPresenter" Grid.ColumnSpan="2" Grid.Row="0" Grid.Column="1" 
                                                                        Visibility="{Binding HeadersVisibility, ConverterParameter={x:Static DataGridHeadersVisibility.Column}, Converter={x:Static DataGrid.HeadersVisibilityConverter}, RelativeSource={RelativeSource AncestorType=DataGrid}}"/>
                                        <ScrollContentPresenter x:Name="PART_ScrollContentPresenter" Grid.ColumnSpan="3" Grid.Column="0" Grid.Row="1"
                                                                CanContentScroll="{TemplateBinding CanContentScroll}"/>
                                        <ScrollBar x:Name="PART_VerticalScrollBar" Opacity="0"  Grid.Row="1" Grid.Column="2" 
                                                   Maximum="{TemplateBinding ScrollableHeight}"
                                                   Orientation="Vertical" 
                                                   Style="{StaticResource for_scrollbar}"
                                                   Width="{Binding ScrollBarWidth, RelativeSource={RelativeSource AncestorType={x:Type local:DataGridEXT}}}"
                                                   Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" 
                                                   Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" 
                                                   ViewportSize="{TemplateBinding ViewportHeight}"/>
                                        <ScrollBar x:Name="PART_HorizontalScrollBar" Opacity="0" Grid.Row="1" Grid.Column="1" 
                                                   Maximum="{TemplateBinding ScrollableWidth}"
                                                   Orientation="Horizontal" VerticalAlignment="Bottom"
                                                   Style="{StaticResource for_scrollbar}"
                                                   Height="{Binding ScrollBarWidth, RelativeSource={RelativeSource AncestorType={x:Type local:DataGridEXT}}}"
                                                   Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" 
                                                   Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" 
                                                   ViewportSize="{TemplateBinding ViewportWidth}"/>
                                    </Grid>
                                    <ControlTemplate.Triggers>
                                        <EventTrigger RoutedEvent="MouseEnter">
                                            <BeginStoryboard Storyboard="{StaticResource sbEnter}"/>
                                        </EventTrigger>
                                        <EventTrigger RoutedEvent="MouseLeave">
                                            <BeginStoryboard Storyboard="{StaticResource sbLeave}"/>
                                        </EventTrigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </ScrollViewer.Template>
                            <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </ScrollViewer>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--默认DataGridCell-->
    <Style TargetType="DataGridCell" BasedOn="{StaticResource CellStyle}"/>
    <!--默认DataGridRow-->
    <Style TargetType="DataGridRow" BasedOn="{StaticResource RowStyle}"/>

</ResourceDictionary>