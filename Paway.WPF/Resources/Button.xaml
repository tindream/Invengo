<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:Paway.WPF">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/Paway.WPF;component\Resources\Default.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <Style TargetType="{x:Type local:ButtonEXT}" BasedOn="{StaticResource Config}">
        <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True" />
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="BorderBrush" Value="LightGray"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Padding" Value="12,5"/>
        <Setter Property="Margin" Value="2"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <!--修改模板属性-->
        <Setter Property="Template">
            <Setter.Value>
                <!--控件模板-->
                <ControlTemplate TargetType="{x:Type local:ButtonEXT}" >
                    <Grid>
                        <Border x:Name="border1"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{Binding Path=ItemBorder.Normal, RelativeSource={RelativeSource TemplatedParent}}"
                                CornerRadius="{TemplateBinding Radius}"
                                Background="{Binding Path=ItemBackground.Normal, RelativeSource={RelativeSource TemplatedParent}}">
                            <Border.Effect>
                                <DropShadowEffect Color="LightGray" BlurRadius="{Binding EffectRadius, RelativeSource={RelativeSource TemplatedParent}}" ShadowDepth="0"/>
                            </Border.Effect>
                        </Border>
                        <Border x:Name="border2" 
                                Padding="{TemplateBinding Padding}"
                                CornerRadius="{TemplateBinding Radius}">
                            <Border.Background>
                                <ImageBrush ImageSource="{Binding Path=BackgroundImage.Normal, RelativeSource={RelativeSource TemplatedParent}}"
                                            Stretch="{Binding Stretch, RelativeSource={RelativeSource TemplatedParent}}"
                                            Viewport="{Binding Viewport, RelativeSource={RelativeSource TemplatedParent}}"/>
                            </Border.Background>
                            <TextBlock x:Name="txt" Text="{TemplateBinding Content}" Style="{x:Null}"
                                       FontSize="{TemplateBinding FontSize, Converter={StaticResource valueMultiConverter}, ConverterParameter=1.2}"
                                       Foreground="{Binding Path=ItemForeground.Normal, RelativeSource={RelativeSource TemplatedParent}}" 
                                       HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                       VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Foreground" TargetName="txt" Value="{Binding Path=ItemForeground.Mouse, RelativeSource={RelativeSource TemplatedParent}}"/>
                            <Setter Property="BorderThickness" TargetName="border1" Value="{Binding Path=ItemBorder.Mouse, RelativeSource={RelativeSource TemplatedParent}}"/>
                            <Setter Property="Background" TargetName="border1" Value="{Binding Path=ItemBackground.Mouse, RelativeSource={RelativeSource TemplatedParent}}"/>
                            <Setter Property="Background" TargetName="border2">
                                <Setter.Value>
                                    <ImageBrush ImageSource="{Binding Path=BackgroundImage.Mouse, RelativeSource={RelativeSource AncestorType=local:ButtonEXT}}" 
                                                Stretch="{Binding Stretch, RelativeSource={RelativeSource AncestorType=local:ButtonEXT}}"
                                                Viewport="{Binding Viewport, RelativeSource={RelativeSource AncestorType=local:ButtonEXT}}"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Foreground" TargetName="txt" Value="{Binding Path=ItemForeground.Pressed, RelativeSource={RelativeSource TemplatedParent}}"/>
                            <Setter Property="BorderThickness" TargetName="border1" Value="{Binding Path=ItemBorder.Pressed, RelativeSource={RelativeSource TemplatedParent}}"/>
                            <Setter Property="Background" TargetName="border1" Value="{Binding Path=ItemBackground.Pressed, RelativeSource={RelativeSource TemplatedParent}}"/>
                            <Setter Property="Background" TargetName="border2">
                                <Setter.Value>
                                    <ImageBrush ImageSource="{Binding Path=BackgroundImage.Pressed, RelativeSource={RelativeSource AncestorType=local:ButtonEXT}}" 
                                                Stretch="{Binding Stretch, RelativeSource={RelativeSource AncestorType=local:ButtonEXT}}"
                                                Viewport="{Binding Viewport, RelativeSource={RelativeSource AncestorType=local:ButtonEXT}}"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" TargetName="border1" Value="LightGray"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>