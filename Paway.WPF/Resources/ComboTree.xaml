<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:Paway.WPF">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/Paway.WPF;component\Resources\Default.xaml" />
        <ResourceDictionary Source="/Paway.WPF;component\Resources\ComboBox.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <Style TargetType="{x:Type local:ComboTree}" BasedOn="{StaticResource Config}">
        <Setter Property="Margin" Value="2"/>
        <Setter Property="MaxDropDownHeight" Value="151"/>
        <Setter Property="Validation.ErrorTemplate" Value="{StaticResource ErrorTemplate}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:ComboTree}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="0.7*"/>
                            <ColumnDefinition Width="0.3*" MaxWidth="30"/>
                        </Grid.ColumnDefinitions>
                        <Border Name="border" Grid.ColumnSpan="2" 
                                BorderThickness="{TemplateBinding BorderThickness}" 
                                CornerRadius="{TemplateBinding Radius}"
                                Padding="{TemplateBinding Padding}"
                                Background="{StaticResource backLine}"
                                BorderBrush="{Binding Path=ItemBrush.Normal, RelativeSource={RelativeSource TemplatedParent}}" />
                        <ContentPresenter x:Name="ContentSite" Margin="5,3,0,3" 
                                          VerticalAlignment="Center" 
                                          IsHitTestVisible="False"
                                          Content="{TemplateBinding Text}" 
                                          ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" 
                                          ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" />
                        <!--ToggleButton 已数据绑定到 ComboBox 本身以切换 IsDropDownOpen-->
                        <ToggleButton x:Name="ToggleButton" Grid.ColumnSpan="2" 
                                      Focusable="false" 
                                      ClickMode="Press"
                                      Template="{StaticResource ComboBoxToggleButton}"
                                      IsChecked="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}" />
                        <!--必须将 TextBox 命名为 PART_EditableTextBox，否则 ComboBox 将无法识别它-->
                        <local:TextBoxEXT x:Name="PART_EditableTextBox"
                                          Text="{TemplateBinding Text}"
                                          Margin="0"
                                          ItemBrush="Transparent"
                                          BorderThickness="0,1"
                                          Visibility="Hidden" 
                                          Focusable="True" 
                                          Background="Transparent" 
                                          Radius="{TemplateBinding Radius}"
                                          IsReadOnly="{TemplateBinding IsReadOnly}"/>
                        <Popup x:Name="PART_Popup" 
                               AllowsTransparency="True" 
                               Focusable="False" 
                               StaysOpen="True"
                               IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}"
                               PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" 
                               Placement="Bottom">
                            <Border x:Name="DropDownBorder" BorderBrush="{Binding Path=ItemBrush.Pressed, RelativeSource={RelativeSource TemplatedParent}}" BorderThickness="1,0,1,1" Padding="0">
                                <local:TreeViewEXT x:Name="PART_TreeView" Background="White" 
                                                   BorderThickness="0"
                                                   Width="{Binding ActualWidth, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource valueAddConverter}}" 
                                                   MaxHeight="{Binding MaxDropDownHeight, RelativeSource={RelativeSource TemplatedParent}}"
                                                   ItemsSource="{Binding ItemsSource, RelativeSource={RelativeSource TemplatedParent}}"/>
                            </Border>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IQuery" Value="true">
                            <Setter TargetName="PART_EditableTextBox" Property="Visibility" Value="Visible" />
                            <Setter TargetName="ContentSite" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="border" Property="Background" Value="White" />
                        </Trigger>
                        <DataTrigger Binding="{Binding ElementName=PART_EditableTextBox, Path=IsKeyboardFocused}" Value="True">
                            <Setter Property="BorderBrush" TargetName="border" 
                                    Value="{Binding Path=ItemBrush.Pressed, RelativeSource={RelativeSource TemplatedParent}}" />
                        </DataTrigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="border" Property="BorderBrush" 
                                    Value="{Binding Path=ItemBrush.Mouse, RelativeSource={RelativeSource TemplatedParent}}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" TargetName="border" Value="LightGray"/>
                        </Trigger>
                        <Trigger Property="IsDropDownOpen" Value="True">
                            <Setter TargetName="border" Property="BorderBrush" 
                                    Value="{Binding Path=ItemBrush.Pressed, RelativeSource={RelativeSource TemplatedParent}}" />
                            <Setter TargetName="border" Property="BorderThickness" 
                                    Value="{Binding BorderThickness, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource noBottomThicknessConverter}}" />
                            <Setter TargetName="border" Property="CornerRadius" 
                                    Value="{Binding Radius, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource noBottomRadiusConverter}}" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsDropDownOpen" Value="False" />
                                <Condition Property="IsMouseOver" Value="true" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="border" Property="BorderBrush" 
                                    Value="{Binding Path=ItemBrush.Mouse, RelativeSource={RelativeSource TemplatedParent}}" />
                        </MultiTrigger>
                        <Trigger Property="Validation.HasError" Value="True">
                            <Setter TargetName="border" Property="BorderBrush" Value="Transparent"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>