<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:Paway.WPF">

    <local:NullJudgeConverter x:Key="nullJudgeConverter" />
    <local:EmptyConverter x:Key="emptyConverter" />

    <Style TargetType="{x:Type local:ListViewEXT}">
        <Setter Property="local:ThemeMonitor.IsMonitoring" Value="True"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="SelectionMode" Value="Single"/>
        <Setter Property="FontFamily" Value="Microsoft YaHei"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="BorderBrush" Value="LightGray"/>
        <Setter Property="Padding" Value="0"/>
        <!--修改模板属性-->
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate >
                    <Border BorderThickness="{TemplateBinding BorderThickness}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            Background="{TemplateBinding Background}"
                            Padding="{TemplateBinding Padding}">
                        <local:ScrollViewerEXT HorizontalScrollBarVisibility="Disabled" VerticalScrollBarVisibility="Auto">
                            <WrapPanel  x:Name="WrapPanel" Orientation="{Binding Orientation, RelativeSource={RelativeSource TemplatedParent}}" ScrollViewer.CanContentScroll="True" IsItemsHost="True" />
                        </local:ScrollViewerEXT>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <!--<Setter Property="ItemTemplate">
            <Setter.Value>
                <DataTemplate >
                    <DockPanel>
                        <Image Source="/Images/selectedBox.png" 
                                   Width="{Binding ItemImageWidth, RelativeSource={RelativeSource AncestorType={x:Type local:ListViewEXT}}}" 
                                   Height="{Binding ItemImageHeight, RelativeSource={RelativeSource AncestorType={x:Type local:ListViewEXT}}}"/>
                        <DockPanel>
                            <TextBlock Text="{Binding Desc}" 
                                   TextTrimming="WordEllipsis" Foreground="#222" 
                                   FontSize="{Binding FontSize-2, RelativeSource={RelativeSource AncestorType={x:Type local:ListViewEXT}}}" 
                                   HorizontalAlignment="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type local:ListViewEXT}}}" 
                                   VerticalAlignment="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type local:ListViewEXT}}}" DockPanel.Dock="Right" >
                            </TextBlock>
                            <TextBlock Text="{Binding Content}" 
                                   TextTrimming="WordEllipsis" Foreground="#222" 
                                   FontSize="{Binding FontSize, RelativeSource={RelativeSource AncestorType={x:Type local:ListViewEXT}}}" 
                                   HorizontalAlignment="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type local:ListViewEXT}}}" 
                                   VerticalAlignment="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type local:ListViewEXT}}}" >
                            </TextBlock>
                        </DockPanel>
                    </DockPanel>
                </DataTemplate>
            </Setter.Value>
        </Setter>-->
        <Setter Property="ItemContainerStyle">
            <Setter.Value>
                <Style TargetType="ListBoxItem">
                    <Setter Property="IsSelected" Value="{Binding IsSelected}" />
                    <Setter Property="Visibility" Value="{Binding Visibility}" />
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="ListBoxItem">
                                <Grid>
                                    <Border x:Name="border" 
                                        BorderBrush="{Binding Path=ItemBorderBrush.Normal, RelativeSource={RelativeSource AncestorType={x:Type local:ListViewEXT}}}" 
                                        Background="{Binding Path=ItemBackground.Normal, RelativeSource={RelativeSource AncestorType={x:Type local:ListViewEXT}}}"
                                        BorderThickness="{Binding Path=ItemBorder.Normal, RelativeSource={RelativeSource AncestorType={x:Type local:ListViewEXT}}}" 
                                        CornerRadius="{Binding Path=ItemRadius.Normal, RelativeSource={RelativeSource AncestorType={x:Type local:ListViewEXT}}}"
                                        Margin="{Binding ItemMargin, RelativeSource={RelativeSource AncestorType={x:Type local:ListViewEXT}}}" 
                                        Width="{Binding ItemWidth, RelativeSource={RelativeSource AncestorType={x:Type local:ListViewEXT}}}" 
                                        Height="{Binding ItemHeight, RelativeSource={RelativeSource AncestorType={x:Type local:ListViewEXT}}}"/>
                                    <Border x:Name="border2" 
                                            Padding="{Binding Path=ItemPadding.Normal, RelativeSource={RelativeSource AncestorType={x:Type local:ListViewEXT}}}" 
                                            Width="{Binding ItemWidth, RelativeSource={RelativeSource AncestorType={x:Type local:ListViewEXT}}}" 
                                            Height="{Binding ItemHeight, RelativeSource={RelativeSource AncestorType={x:Type local:ListViewEXT}}}">
                                        <DockPanel>
                                            <Image Name="image" 
                                               Source="{Binding Path=Image.Normal}" 
                                               Width="{Binding ItemImageWidth, RelativeSource={RelativeSource AncestorType={x:Type local:ListViewEXT}}}" 
                                               Height="{Binding ItemImageHeight, RelativeSource={RelativeSource AncestorType={x:Type local:ListViewEXT}}}"
                                               DockPanel.Dock="{Binding ItemImageDock, RelativeSource={RelativeSource AncestorType={x:Type local:ListViewEXT}}}"
                                               Margin="{Binding Path=ItemImageMargin.Normal, RelativeSource={RelativeSource AncestorType={x:Type local:ListViewEXT}}}" 
                                               Stretch="{Binding Path=ItemImageStretch, RelativeSource={RelativeSource AncestorType={x:Type local:ListViewEXT}}}"/>
                                            <DockPanel>
                                                <TextBlock Name="desc" Text="{Binding Desc}"
                                                       TextTrimming="WordEllipsis" 
                                                       Foreground="{Binding Path=ItemDescForeground.Normal, RelativeSource={RelativeSource AncestorType={x:Type local:ListViewEXT}}}" 
                                                       Background="{Binding Path=ItemDescBackground.Normal, RelativeSource={RelativeSource AncestorType={x:Type local:ListViewEXT}}}" 
                                                       FontSize="{Binding Path=ItemDescFontSize.Normal, RelativeSource={RelativeSource AncestorType={x:Type local:ListViewEXT}}}" 
                                                       HorizontalAlignment="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type local:ListViewEXT}}}" 
                                                       VerticalAlignment="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type local:ListViewEXT}}}"
                                                       Padding="{Binding ItemDescPadding, RelativeSource={RelativeSource AncestorType={x:Type local:ListViewEXT}}}"
                                                       DockPanel.Dock="{Binding ItemDescDock, RelativeSource={RelativeSource AncestorType={x:Type local:ListViewEXT}}}">
                                                    <TextBlock.ToolTip>
                                                        <StackPanel Orientation="Horizontal">
                                                            <TextBlock Text="{Binding Desc}"/>
                                                        </StackPanel>
                                                    </TextBlock.ToolTip>
                                                </TextBlock>
                                                <TextBlock Name="text" Text="{Binding Text}" 
                                                       TextTrimming="WordEllipsis" 
                                                       Foreground="{Binding Path=ItemTextForeground.Normal, RelativeSource={RelativeSource AncestorType={x:Type local:ListViewEXT}}}" 
                                                       Background="{Binding Path=ItemTextBackground.Normal, RelativeSource={RelativeSource AncestorType={x:Type local:ListViewEXT}}}" 
                                                       FontSize="{Binding Path=ItemTextFontSize.Normal, RelativeSource={RelativeSource AncestorType={x:Type local:ListViewEXT}}}" 
                                                       HorizontalAlignment="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type local:ListViewEXT}}}" 
                                                       VerticalAlignment="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type local:ListViewEXT}}}" 
                                                       Padding="{Binding ItemTextPadding, RelativeSource={RelativeSource AncestorType={x:Type local:ListViewEXT}}}">
                                                    <TextBlock.ToolTip>
                                                        <StackPanel Orientation="Horizontal">
                                                            <TextBlock Text="{Binding Text}"/>
                                                        </StackPanel>
                                                    </TextBlock.ToolTip>
                                                </TextBlock>
                                            </DockPanel>
                                        </DockPanel>
                                    </Border>
                                </Grid>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True" >
                                        <Setter TargetName="image" Property="Source" Value="{Binding Path=Image.Mouse}"/>
                                        <Setter TargetName="border" Property="BorderBrush" 
                                                Value="{Binding Path=ItemBorderBrush.Mouse, RelativeSource={RelativeSource AncestorType={x:Type local:ListViewEXT}}}"/>
                                        <Setter TargetName="border" Property="Background">
                                            <Setter.Value>
                                                <MultiBinding Converter="{StaticResource emptyConverter}">
                                                    <Binding Path="ItemBackground.Mouse" />
                                                    <Binding Path="ItemBackground.Mouse" RelativeSource="{RelativeSource AncestorType={x:Type local:ListViewEXT}}" />
                                                </MultiBinding>
                                            </Setter.Value>
                                        </Setter>
                                        <Setter TargetName="border" Property="BorderThickness" 
                                                Value="{Binding Path=ItemBorder.Mouse, RelativeSource={RelativeSource AncestorType={x:Type local:ListViewEXT}}}"/>
                                        <Setter TargetName="border" Property="CornerRadius" 
                                                Value="{Binding Path=ItemRadius.Mouse, RelativeSource={RelativeSource AncestorType={x:Type local:ListViewEXT}}}"/>
                                        <Setter TargetName="border2" Property="Padding" 
                                                Value="{Binding Path=ItemPadding.Mouse, RelativeSource={RelativeSource AncestorType={x:Type local:ListViewEXT}}}"/>
                                        <Setter TargetName="text" Property="Foreground" 
                                                Value="{Binding Path=ItemTextForeground.Mouse, RelativeSource={RelativeSource AncestorType={x:Type local:ListViewEXT}}}"/>
                                        <Setter TargetName="text" Property="Background" 
                                                Value="{Binding Path=ItemTextBackground.Mouse, RelativeSource={RelativeSource AncestorType={x:Type local:ListViewEXT}}}"/>
                                        <Setter TargetName="text" Property="FontSize" 
                                                Value="{Binding Path=ItemTextFontSize.Mouse, RelativeSource={RelativeSource AncestorType={x:Type local:ListViewEXT}}}"/>
                                        <Setter TargetName="desc" Property="Foreground" 
                                                Value="{Binding Path=ItemDescForeground.Mouse, RelativeSource={RelativeSource AncestorType={x:Type local:ListViewEXT}}}"/>
                                        <Setter TargetName="desc" Property="Background" 
                                                Value="{Binding Path=ItemDescBackground.Mouse, RelativeSource={RelativeSource AncestorType={x:Type local:ListViewEXT}}}"/>
                                        <Setter TargetName="desc" Property="FontSize" 
                                                Value="{Binding Path=ItemDescFontSize.Mouse, RelativeSource={RelativeSource AncestorType={x:Type local:ListViewEXT}}}"/>
                                        <Setter TargetName="image" Property="Margin" 
                                                Value="{Binding Path=ItemImageMargin.Mouse, RelativeSource={RelativeSource AncestorType={x:Type local:ListViewEXT}}}"/>
                                    </Trigger>
                                    <Trigger Property="IsSelected" Value="true">
                                        <Setter TargetName="image" Property="Source" >
                                            <Setter.Value>
                                                <MultiBinding Converter="{StaticResource nullJudgeConverter}">
                                                    <Binding Path="Image.Pressed" />
                                                    <Binding Path="Image.Mouse" />
                                                    <Binding Path="Image.Normal" />
                                                </MultiBinding>
                                            </Setter.Value>
                                        </Setter>
                                        <Setter TargetName="border" Property="BorderBrush" 
                                                Value="{Binding Path=ItemBorderBrush.Pressed, RelativeSource={RelativeSource AncestorType={x:Type local:ListViewEXT}}}"/>
                                        <Setter TargetName="border" Property="Background">
                                            <Setter.Value>
                                                <MultiBinding Converter="{StaticResource emptyConverter}">
                                                    <Binding Path="ItemBackground.Pressed" />
                                                    <Binding Path="ItemBackground.Pressed" RelativeSource="{RelativeSource AncestorType={x:Type local:ListViewEXT}}" />
                                                </MultiBinding>
                                            </Setter.Value>
                                        </Setter>
                                        <Setter TargetName="border" Property="BorderThickness" 
                                                Value="{Binding Path=ItemBorder.Pressed, RelativeSource={RelativeSource AncestorType={x:Type local:ListViewEXT}}}"/>
                                        <Setter TargetName="border" Property="CornerRadius" 
                                                Value="{Binding Path=ItemRadius.Pressed, RelativeSource={RelativeSource AncestorType={x:Type local:ListViewEXT}}}"/>
                                        <Setter TargetName="border2" Property="Padding" 
                                                Value="{Binding Path=ItemPadding.Pressed, RelativeSource={RelativeSource AncestorType={x:Type local:ListViewEXT}}}"/>
                                        <Setter TargetName="text" Property="Foreground" 
                                                Value="{Binding Path=ItemTextForeground.Pressed, RelativeSource={RelativeSource AncestorType={x:Type local:ListViewEXT}}}"/>
                                        <Setter TargetName="text" Property="Background" 
                                                Value="{Binding Path=ItemTextBackground.Pressed, RelativeSource={RelativeSource AncestorType={x:Type local:ListViewEXT}}}"/>
                                        <Setter TargetName="text" Property="FontSize" 
                                                Value="{Binding Path=ItemTextFontSize.Pressed, RelativeSource={RelativeSource AncestorType={x:Type local:ListViewEXT}}}"/>
                                        <Setter TargetName="desc" Property="Foreground" 
                                                Value="{Binding Path=ItemDescForeground.Pressed, RelativeSource={RelativeSource AncestorType={x:Type local:ListViewEXT}}}"/>
                                        <Setter TargetName="desc" Property="Background" 
                                                Value="{Binding Path=ItemDescBackground.Pressed, RelativeSource={RelativeSource AncestorType={x:Type local:ListViewEXT}}}"/>
                                        <Setter TargetName="desc" Property="FontSize" 
                                                Value="{Binding Path=ItemDescFontSize.Pressed, RelativeSource={RelativeSource AncestorType={x:Type local:ListViewEXT}}}"/>
                                        <Setter TargetName="image" Property="Margin" 
                                                Value="{Binding Path=ItemImageMargin.Pressed, RelativeSource={RelativeSource AncestorType={x:Type local:ListViewEXT}}}"/>
                                    </Trigger>
                                    <MultiTrigger>
                                        <MultiTrigger.Conditions>
                                            <Condition Property="IsSelected" Value="true"/>
                                            <Condition Property="IsMouseOver" Value="true"/>
                                        </MultiTrigger.Conditions>
                                        <Setter TargetName="border" Property="BorderBrush" 
                                                Value="{Binding Path=ItemBorderBrush.PressedMouse, RelativeSource={RelativeSource AncestorType={x:Type local:ListViewEXT}}}"/>
                                        <Setter TargetName="border" Property="Background">
                                            <Setter.Value>
                                                <MultiBinding Converter="{StaticResource emptyConverter}">
                                                    <Binding Path="ItemBackground.PressedMouse" />
                                                    <Binding Path="ItemBackground.PressedMouse" RelativeSource="{RelativeSource AncestorType={x:Type local:ListViewEXT}}" />
                                                </MultiBinding>
                                            </Setter.Value>
                                        </Setter>
                                    </MultiTrigger>
                                    <DataTrigger Binding="{Binding IsPressed}" Value="true">
                                        <Setter TargetName="border" Property="BorderBrush" 
                                                Value="{Binding Path=ItemBorderBrush.Pressed, RelativeSource={RelativeSource AncestorType={x:Type local:ListViewEXT}}}"/>
                                        <Setter TargetName="text" Property="Foreground" 
                                                Value="{Binding Path=ItemTextForeground.Pressed, RelativeSource={RelativeSource AncestorType={x:Type local:ListViewEXT}}}"/>
                                        <Setter TargetName="border" Property="Background">
                                            <Setter.Value>
                                                <MultiBinding Converter="{StaticResource emptyConverter}">
                                                    <Binding Path="ItemBackground.Pressed" />
                                                    <Binding Path="ItemBackground.Pressed" RelativeSource="{RelativeSource AncestorType={x:Type local:ListViewEXT}}" />
                                                </MultiBinding>
                                            </Setter.Value>
                                        </Setter>
                                        <Setter TargetName="border" Property="BorderThickness" 
                                                Value="{Binding Path=ItemBorder.Pressed, RelativeSource={RelativeSource AncestorType={x:Type local:ListViewEXT}}}"/>
                                    </DataTrigger>
                                    <MultiTrigger>
                                        <MultiTrigger.Conditions>
                                            <Condition Property="IsSelected" Value="false"/>
                                            <Condition Property="IsMouseOver" Value="false"/>
                                        </MultiTrigger.Conditions>
                                        <Setter TargetName="border" Property="BorderBrush" 
                                                Value="{Binding Path=ItemBorderBrush.Normal, RelativeSource={RelativeSource AncestorType={x:Type local:ListViewEXT}}}"/>
                                        <Setter TargetName="border" Property="Background">
                                            <Setter.Value>
                                                <MultiBinding Converter="{StaticResource emptyConverter}">
                                                    <Binding Path="ItemBackground.Normal" />
                                                    <Binding Path="ItemBackground.Normal" RelativeSource="{RelativeSource AncestorType={x:Type local:ListViewEXT}}" />
                                                </MultiBinding>
                                            </Setter.Value>
                                        </Setter>
                                        <Setter TargetName="border" Property="BorderThickness" 
                                                Value="{Binding Path=ItemBorder.Normal, RelativeSource={RelativeSource AncestorType={x:Type local:ListViewEXT}}}"/>
                                    </MultiTrigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>