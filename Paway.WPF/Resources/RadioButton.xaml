<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:Paway.WPF">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/Paway.WPF;component\Resources\Default.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <Style TargetType="{x:Type local:RadioButtonEXT}" BasedOn="{StaticResource FocusConfig}">
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Padding" Value="0,0,3,0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="local:RadioButtonEXT">
                    <Grid Background="Transparent" Name="templateRoot">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Border
                            BorderThickness="{TemplateBinding Border.BorderThickness}"
                            CornerRadius="100"
                            BorderBrush="{Binding Path=ItemBrush.Normal, RelativeSource={RelativeSource TemplatedParent}}"
                            Background="{TemplateBinding Panel.Background}"
                            Name="radioButtonBorder"
                            Margin="3,6"
                            HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}">
                            <Grid Name="markGrid" Margin="2">
                                <Ellipse Name="optionMark" Width="8" Height="8" Opacity="0"
                                         Fill="{Binding Path=ItemBrush.Pressed, RelativeSource={RelativeSource TemplatedParent}}" />
                            </Grid>
                        </Border>
                        <ContentPresenter
                            RecognizesAccessKey="True"
                            Content="{TemplateBinding ContentControl.Content}"
                            ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}"
                            ContentStringFormat="{TemplateBinding ContentControl.ContentStringFormat}"
                            Name="contentPresenter"
                            Margin="{TemplateBinding Control.Padding}"
                            HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"
                            Grid.Column="1" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="UIElement.IsMouseOver" Value="True">
                            <Setter Property="Panel.Background" TargetName="radioButtonBorder" Value="#FFF3F9FF"/>
                            <Setter Property="Border.BorderBrush" TargetName="radioButtonBorder"
                                    Value="{Binding Path=ItemBrush.Mouse, RelativeSource={RelativeSource TemplatedParent}}"/>
                        </Trigger>
                        <Trigger Property="UIElement.IsEnabled" Value="False">
                            <Setter Property="Panel.Background" TargetName="radioButtonBorder" Value="#FFE6E6E6"/>
                            <Setter Property="Border.BorderBrush" TargetName="radioButtonBorder" Value="#FFBCBCBC"/>
                            <Setter Property="Shape.Fill" TargetName="optionMark" Value="Gray"/>
                        </Trigger>
                        <Trigger Property="ButtonBase.IsPressed" Value="True">
                            <Setter Property="Panel.Background" TargetName="radioButtonBorder" Value="#FFD9ECFF"/>
                            <Setter Property="Border.BorderBrush" TargetName="radioButtonBorder"
                                    Value="{Binding Path=ItemBrush.Pressed, RelativeSource={RelativeSource TemplatedParent}}"/>
                        </Trigger>
                        <Trigger Property="ToggleButton.IsChecked" Value="True">
                            <Setter Property="UIElement.Opacity" TargetName="optionMark" Value="1"/>
                        </Trigger>
                        <Trigger Property="ToggleButton.IsChecked" Value="{x:Null}">
                            <Setter Property="UIElement.Opacity" TargetName="optionMark" Value="0.56"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>