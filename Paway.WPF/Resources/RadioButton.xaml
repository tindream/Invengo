<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:Paway.WPF;assembly=Paway.WPF" xmlns:system="clr-namespace:System;assembly=mscorlib">

    <Style TargetType="{x:Type local:RadioButtonEXT}">
        <Setter Property="local:ThemeMonitor.IsMonitoring" Value="True"/>
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="local:RadioButtonEXT">
                    <Grid Background="#00FFFFFF" Name="templateRoot" SnapsToDevicePixels="True">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Border
                            BorderThickness="{TemplateBinding Border.BorderThickness}"
                            CornerRadius="200"
                            BorderBrush="{TemplateBinding Border.BorderBrush}"
                            Background="{TemplateBinding Panel.Background}"
                            Name="radioButtonBorder"
                            Margin="1,1,2,1"
                            HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}">
                            <Grid Name="markGrid" Margin="2,2,2,2">
                                <Ellipse Fill="#FF212121" Name="optionMark" MinWidth="6" MinHeight="6" Opacity="0" />
                            </Grid>
                        </Border>
                        <ContentPresenter
                            RecognizesAccessKey="True"
                            Content="{TemplateBinding ContentControl.Content}"
                            ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}"
                            ContentStringFormat="{TemplateBinding ContentControl.ContentStringFormat}"
                            Name="contentPresenter"
                            Margin="{TemplateBinding Control.Padding}"
                            HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"
                            SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"
                            Focusable="False"
                            Grid.Column="1" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="ContentControl.HasContent">
                            <Setter Property="FrameworkElement.FocusVisualStyle">
                                <Setter.Value>
                                    <Style TargetType="IFrameworkInputElement">
                                        <Style.Resources>
                                            <ResourceDictionary />
                                        </Style.Resources>
                                        <Setter Property="Control.Template">
                                            <Setter.Value>
                                                <ControlTemplate>
                                                    <Rectangle
                                                        Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" 
                                                        StrokeThickness="1"
                                                        StrokeDashArray="1 2"
                                                        Margin="14,0,0,0"
                                                        SnapsToDevicePixels="True" />
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Control.Padding">
                                <Setter.Value>
                                    <Thickness>4,-1,0,0</Thickness>
                                </Setter.Value>
                            </Setter>
                            <Trigger.Value>
                                <system:Boolean>True</system:Boolean>
                            </Trigger.Value>
                        </Trigger>
                        <Trigger Property="UIElement.IsMouseOver">
                            <Setter Property="Panel.Background" TargetName="radioButtonBorder">
                                <Setter.Value>
                                    <SolidColorBrush>#FFF3F9FF</SolidColorBrush>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Border.BorderBrush" TargetName="radioButtonBorder">
                                <Setter.Value>
                                    <SolidColorBrush>#FF5593FF</SolidColorBrush>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Shape.Fill" TargetName="optionMark">
                                <Setter.Value>
                                    <SolidColorBrush>#FF212121</SolidColorBrush>
                                </Setter.Value>
                            </Setter>
                            <Trigger.Value>
                                <system:Boolean>True</system:Boolean>
                            </Trigger.Value>
                        </Trigger>
                        <Trigger Property="UIElement.IsEnabled">
                            <Setter Property="Panel.Background" TargetName="radioButtonBorder">
                                <Setter.Value>
                                    <SolidColorBrush>#FFE6E6E6</SolidColorBrush>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Border.BorderBrush" TargetName="radioButtonBorder">
                                <Setter.Value>
                                    <SolidColorBrush>#FFBCBCBC</SolidColorBrush>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Shape.Fill" TargetName="optionMark">
                                <Setter.Value>
                                    <SolidColorBrush>#FF707070</SolidColorBrush>
                                </Setter.Value>
                            </Setter>
                            <Trigger.Value>
                                <system:Boolean>False</system:Boolean>
                            </Trigger.Value>
                        </Trigger>
                        <Trigger Property="ButtonBase.IsPressed">
                            <Setter Property="Panel.Background" TargetName="radioButtonBorder">
                                <Setter.Value>
                                    <SolidColorBrush>#FFD9ECFF</SolidColorBrush>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Border.BorderBrush" TargetName="radioButtonBorder">
                                <Setter.Value>
                                    <SolidColorBrush>#FF3C77DD</SolidColorBrush>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Shape.Fill" TargetName="optionMark">
                                <Setter.Value>
                                    <SolidColorBrush>#FF212121</SolidColorBrush>
                                </Setter.Value>
                            </Setter>
                            <Trigger.Value>
                                <system:Boolean>True</system:Boolean>
                            </Trigger.Value>
                        </Trigger>
                        <Trigger Property="ToggleButton.IsChecked">
                            <Setter Property="UIElement.Opacity" TargetName="optionMark">
                                <Setter.Value>
                                    <system:Double>1</system:Double>
                                </Setter.Value>
                            </Setter>
                            <Trigger.Value>
                                <system:Boolean>True</system:Boolean>
                            </Trigger.Value>
                        </Trigger>
                        <Trigger Property="ToggleButton.IsChecked">
                            <Setter Property="UIElement.Opacity" TargetName="optionMark">
                                <Setter.Value>
                                    <system:Double>0.56</system:Double>
                                </Setter.Value>
                            </Setter>
                            <Trigger.Value>
                                <x:Null />
                            </Trigger.Value>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>